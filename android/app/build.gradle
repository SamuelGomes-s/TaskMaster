apply plugin: "com.android.application"
apply plugin: "org.jetbrains.kotlin.android"
apply plugin: "com.facebook.react"

/**
 * This is the configuration block to customize your React Native Android app.
 * By default you don't need to apply any configuration, just uncomment the lines you need.
 */
react {
    /* Folders */
    //   The root of your project, i.e. where "package.json" lives. Default is '../..'
    // root = file("../../")
    //   The folder where the react-native NPM package is. Default is ../../node_modules/react-native
    // reactNativeDir = file("../../node_modules/react-native")
    //   The folder where the react-native Codegen package is. Default is ../../node_modules/@react-native/codegen
    // codegenDir = file("../../node_modules/@react-native/codegen")
    //   The cli.js file which is the React Native CLI entrypoint. Default is ../../node_modules/react-native/cli.js
    // cliFile = file("../../node_modules/react-native/cli.js")

    /* Variants */
    //   The list of variants to that are debuggable. For those we're going to
    //   skip the bundling of the JS bundle and the assets. By default is just 'debug'.
    //   If you add flavors like lite, prod, etc. you'll have to list your debuggableVariants.
    // debuggableVariants = ["liteDebug", "prodDebug"]

    /* Bundling */
    //   A list containing the node command and its flags. Default is just 'node'.
    // nodeExecutableAndArgs = ["node"]
    //
    //   The command to run when bundling. By default is 'bundle'
    // bundleCommand = "ram-bundle"
    //
    //   The path to the CLI configuration file. Default is empty.
    // bundleConfig = file(../rn-cli.config.js)
    //
    //   The name of the generated asset file containing your JS bundle
    // bundleAssetName = "MyApplication.android.bundle"
    //
    //   The entry file for bundle generation. Default is 'index.android.js' or 'index.js'
    // entryFile = file("../js/MyApplication.android.js")
    //
    //   A list of extra flags to pass to the 'bundle' commands.
    //   See https://github.com/react-native-community/cli/blob/main/docs/commands.md#bundle
    // extraPackagerArgs = []

    /* Hermes Commands */
    //   The hermes compiler command to run. By default it is 'hermesc'
    // hermesCommand = "$rootDir/my-custom-hermesc/bin/hermesc"
    //
    //   The list of flags to pass to the Hermes compiler. By default is "-O", "-output-source-map"
    // hermesFlags = ["-O", "-output-source-map"]

    /* Autolinking */
    autolinkLibrariesWithApp()
}

/**
 * Set this to true to Run Proguard on Release builds to minify the Java bytecode.
 */
def enableProguardInReleaseBuilds = false

/**
 * The preferred build flavor of JavaScriptCore (JSC)
 *
 * For example, to use the international variant, you can use:
 * `def jscFlavor = 'org.webkit:android-jsc-intl:+'`
 *
 * The international variant includes ICU i18n library and necessary data
 * allowing to use e.g. `Date.toLocaleString` and `String.localeCompare` that
 * give correct results when using with locales other than en-US. Note that
 * this variant is about 6MiB larger per architecture than default.
 */
def jscFlavor = 'org.webkit:android-jsc:+'

android {
    ndkVersion rootProject.ext.ndkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion
    compileSdk rootProject.ext.compileSdkVersion

    namespace "com.taskmaster"
    defaultConfig {
        applicationId "com.taskmaster"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"
    }
    signingConfigs {
        debug {
            storeFile file('debug.keystore')
            storePassword 'android'
            keyAlias 'androiddebugkey'
            keyPassword 'android'
        }
    }
    buildTypes {
        debug {
            signingConfig signingConfigs.debug
        }
        release {
            // Caution! In production, you need to generate your own keystore file.
            // see https://reactnative.dev/docs/signed-apk-android.
            signingConfig signingConfigs.debug
            minifyEnabled enableProguardInReleaseBuilds
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
        }
    }
}

dependencies {
    // The version of react-native is set by the React Native Gradle Plugin
    implementation("com.facebook.react:react-android")

    if (hermesEnabled.toBoolean()) {
        implementation("com.facebook.react:hermes-android")
    } else {
        implementation jscFlavor
    }
}
project.ext.vectoricons = [
    iconFontNames: [
  'AntDesign.ttf',                // AntDesign from AntFinance (298 icons)
  'Entypo.ttf',                   // Entypo by Daniel Bruce (v1.0.1 with 411 icons)
  'EvilIcons.ttf',                // EvilIcons designed by Alexander Madyankin & Roman Shamin (v1.10.1 with 70 icons)
  'Feather.ttf',                  // Feather created by Cole Bemis & Contributors (v4.28.0 featuring 286 icons)
  'FontAwesome.ttf',              // FontAwesome by Dave Gandy (v4.7.0 containing 675 icons)
  'FontAwesome5.ttf',             // FontAwesome 5 from Fonticons, Inc. (v5.15.3 offering 1,598 free and 7,848 pro icons)
  'FontAwesome6.ttf',             // FontAwesome 6 designed by Fonticons, Inc. (v6.1.2 featuring 2,016 free and 16,150 pro icons)
  'Fontisto.ttf',                 // Fontisto created by Kenan Gündoğan (v3.0.4 featuring 615 icons)
  'Foundation.ttf',               // Foundation by ZURB, Inc. (v3.0 with 283 icons)
  'Ionicons.ttf',                 // Ionicons crafted by Ionic (v7.1.0 containing 1,338 icons)
  'MaterialIcons.ttf',            // MaterialIcons by Google, Inc. (v4.0.0 featuring 2,189 icons)
  'MaterialCommunityIcons.ttf',   // MaterialCommunityIcons from MaterialDesignIcons.com (v6.5.95 including 6,596 icons)
  'Octicons.ttf',                 // Octicons designed by Github, Inc. (v16.3.1 with 250 icons)
  'Zocial.ttf',                   // Zocial by Sam Collins (v1.4.0 with 100 icons)
  'SimpleLineIcons.ttf'           // SimpleLineIcons crafted by thesabbir (not specified in your original list)
]

]

apply from: file("../../node_modules/react-native-vector-icons/fonts.gradle")